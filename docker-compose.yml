services:
  # Existing services would be here
  
  # PostgreSQL database for template service
  template-db:
    image: postgres:13
    container_name: template-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=template_db
    volumes:
      - template_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - app-network
  
  # Template microservice
  template:
    build: 
      context: ./services/template
    container_name: template-service
    ports:
      - "12345:5001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@template-db:5432/template_db
    volumes:
      - ./services/template:/app
    restart: unless-stopped
    depends_on:
      - template-db
    networks:
      - app-network

  # PostgreSQL database for recommendation service
  recommendation-db:
    image: postgres:13
    container_name: recommendation-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=recommendation_db
    volumes:
      - recommendation_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    networks:
      - app-network
      
  # Recommendation microservice
  recommendation:
    build: 
      context: ./services/recommendation-management
    container_name: recommendation-service
    ports:
      - "5002:5002"
    env_file:
      - ./services/recommendation-management/.env
    volumes:
      - ./services/recommendation-management:/app
    restart: unless-stopped
    depends_on:
      - recommendation-db
      - rabbitmq
    networks:
      - app-network

  # PostgreSQL database for group request service
  grouprequest-db:
    image: postgres:13
    container_name: grouprequest-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=grouprequest_db
    volumes:
      - grouprequest_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5434:5432"
    networks:
      - app-network
      
  # Group management microservice
  group-management:
    build: 
      context: ./services/group-management
    container_name: group-management-service
    ports:
      - "5003:5003"
    env_file:
      - ./services/group-management/.env
    volumes:
      - ./services/group-management:/app
    restart: unless-stopped
    depends_on:
      - grouprequest-db
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  template_postgres_data:
  recommendation_postgres_data:
  rabbitmq_data:
  grouprequest_postgres_data:
