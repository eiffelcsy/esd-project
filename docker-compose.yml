services:
  # PostgreSQL database for template service
  template-db:
    image: postgres:13
    container_name: template-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=template_db
    volumes:
      - template_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5439:5432"
    networks:
      - app-network

  # Itinerary microservice
  itinerary:
    build:
      context: ./services/itinerary
    container_name: itinerary-service
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@itinerary-db:5432/itinerary_db
    volumes:
      - ./services/itinerary:/app
    restart: unless-stopped
    depends_on:
      - itinerary-db
    networks:
      - app-network

  # PostgreSQL database for itinerary service
  itinerary-db:
    image: postgres:13
    container_name: itinerary-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=itinerary_db
    volumes:
      - itinerary_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5437:5432"
    networks:
      - app-network
  
  # PostgreSQL database for recommendation-management service
  recommendation-db:
    image: postgres:13
    container_name: recommendation-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=recommendation_db
    volumes:
      - recommendation_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5438:5432"
    networks:
      - app-network

  # Recommendation-management microservice
  recommendation-management:
    build:
      context: ./services/recommendation-management
    container_name: recommendation-management-service
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@recommendation-db:5432/recommendation_db
      - OPENAI_API_KEY=your_openai_api_key
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./services/recommendation-management:/app
    restart: unless-stopped
    depends_on:
      - recommendation-db
      - rabbitmq
    networks:
      - app-network

  # Template microservice
  template:
    build: 
      context: ./services/template
    container_name: template-service
    ports:
      - "12345:5001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@template-db:5432/template_db
    volumes:
      - ./services/template:/app
    restart: unless-stopped
    depends_on:
      - template-db
    networks:
      - app-network

  # RabbitMQ service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"  # Change the external port to 5673
      - "15673:15672"  # Change the management UI port to 15673
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  template_postgres_data:
  recommendation_postgres_data:
  rabbitmq_data:
  grouprequest_postgres_data:
  itinerary_postgres_data: